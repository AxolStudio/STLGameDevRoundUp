name: ▶ Generate a new Roundup Issue!

on:
    workflow_dispatch:

permissions: write-all    

concurrency:
    group: "pages"
    cancel-in-progress: false

defaults:
    run:
        shell: bash

jobs:
    build: 
        runs-on: ubuntu-latest
        env:
            HUGO_VERSION: 0.120.4
        outputs:
            issue_no: ${{ steps.issue.outputs.issue_no }}
            issue_id: ${{ steps.issue.outputs.issue_id }}
            base_url: ${{ steps.pages.outputs.base_url }}
        steps:
            -   name: Install Hugo CLI
                run: |
                    wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
                    && sudo dpkg -i ${{ runner.temp }}/hugo.deb
            -   name: Install Dart Sass
                run: sudo snap install dart-sass
            -   name: Checkout
                uses: actions/checkout@v4
                with: 
                    submodules: recursive
                    fetch-depth: 0
            -   name: Setup Pages
                id: pages
                uses: actions/configure-pages@v3
            -   name: Setup Node
                uses: actions/setup-node@v3
                with:
                    node-version: 20.10.0
            -   name: Install dependencies
                run: npm ci
            -   name: Grab Issue Comments
                id: issue
                run: |
                    RUIssue="$(gh api graphql -F owner=$OWNER -F name=$REPO -f query='
                        query($name: String!, $owner: String!) {
                            repository(name: $name, owner: $owner) {
                                issues(first: 1, states: OPEN, labels: "next-roundup") {
                                    nodes {
                                        title
                                        number
                                        comments(first:100) {
                                            nodes {
                                                body
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ')"
                    issue_id=$(echo $RUIssue | jq -r '.data.repository.issues.nodes[0].number')
                    echo 'issue_id'=$issue_id >> $GITHUB_OUTPUT
                    issue_title=$(echo $RUIssue | jq -r '.data.repository.issues.nodes[0].title')
                    ru_no="${issue_title##*#}"
                    save_to="data/issue${ru_no}.json"
                    mkdir -p data
                    echo $RUIssue | jq -r '.data.repository.issues.nodes[].comments' > $save_to
                    echo 'ISSUE_NO'=$ru_no >> $GITHUB_ENV
                    echo 'issue_no'=$ru_no >> $GITHUB_OUTPUT
                    md_file="content/issue-${ru_no}.md"
                    cat << EOF >> $md_file
                    ---
                    title: "Issue #$ru_no"
                    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
                    draft: false
                    no: $ru_no
                    ---
                    EOF
                env: 
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    OWNER: ${{ github.repository_owner }}
                    REPO: ${{ github.event.repository.name }}
            -   name: Commit change
                run: |
                    git config --global user.name "GitHub Actions"
                    git config --global user.email "no-reply@github.com"
                    git add content/issue-${ISSUE_NO}.md data/issue${ISSUE_NO}.json
                    git commit -m "Update issue ${ISSUE_NO}"
                    git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
                    git push
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    ISSUE_NO: ${{ env.ISSUE_NO }}
            -   name: Build
                env:
                    HUGO_ENVIRONMENT: production
                    HUGO_ENV: production
                run: |
                    hugo \
                    --gc \
                    --minify \
                    --baseURL "${{ steps.pages.outputs.base_url }}/"
            -   name: Upload Artifact
                uses: actions/upload-pages-artifact@v2
                with: 
                    path: ./public
        
    deploy:
        environment: 
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        outputs:
            issue_no: ${{ needs.build.outputs.issue_no }}
            issue_id: ${{ needs.build.outputs.issue_id }}
            base_url: ${{ needs.build.outputs.base_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Deploy
                id: deployment
                uses: actions/deploy-pages@v2
    
    screenshot:
        runs-on: ubuntu-latest
        needs: deploy
        outputs:
            issue_no: ${{ needs.deploy.outputs.issue_no }}
            issue_id: ${{ needs.deploy.outputs.issue_id }}
            path: ${{ steps.screenshot.outputs.path }}
            base_url: ${{ needs.deploy.outputs.base_url }}
        steps: 
            -   name: Checkout
                uses: actions/checkout@v4
                with: 
                    submodules: recursive
                    fetch-depth: 0
            -   name: Screenshot
                id: screenshot
                uses: swinton/screenshot-website@v1.x
                with:
                    source: "${{ needs.deploy.outputs.base_url }}/issue-${{ needs.deploy.outputs.issue_no }}/"
                    destination: "issue-${{ needs.deploy.outputs.issue_no }}.png"
            -   name: Commit image
                run: |
                    git pull
                    mkdir -p screenshots
                    mv -f ${{ steps.screenshot.outputs.path }} screenshots/issue-${{ needs.deploy.outputs.issue_no }}.png
                    git config --global user.name "GitHub Actions"
                    git config --global user.email "no-reply@github.com"
                    git add screenshots/issue-${{ needs.deploy.outputs.issue_no }}.png
                    git commit -m "Update issue image ${{ needs.deploy.outputs.issue_no }}"
                    git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
                    git push
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    share:
        runs-on: ubuntu-latest
        needs: screenshot
        steps:
            -   uses: actions/checkout@v4
            -   run : git pull
            -   run: ls -l
            -   name: Tweet
                uses: snow-actions/tweet@v1.4.0
                env:
                    CONSUMER_API_KEY: ${{ secrets.CONSUMER_API_KEY }}
                    CONSUMER_API_SECRET_KEY: ${{ secrets.CONSUMER_API_SECRET_KEY }}
                    ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
                    ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
                with:
                    status: |
                        St Louis Game Developer Roundup Issue № ${{ needs.screenshot.outputs.issue_no }} is out!

                        ${{ needs.screenshot.outputs.base_url }}/issue-${{ needs.screenshot.outputs.issue_no }}/
                    media_paths: |
                        screenshots/issue-${{ needs.screenshot.outputs.issue_no }}.png
            -   name: Bsky's
                uses: myConsciousness/bluesky-post@v5
                with: 
                    text:
                        St Louis Game Developer Roundup Issue № ${{ needs.screenshot.outputs.issue_no }} is out!

                        ${{ needs.screenshot.outputs.base_url }}/issue-${{ needs.screenshot.outputs.issue_no }}/
                    link-preview-url: https://raw.githubusercontent.com/AxolStudio/STLGameDevRoundUp/main/screenshots/issue-${{ needs.screenshot.outputs.issue_no }}/
                    identifier: "axolstudio.com"
                    password: ${{ secrets.BLUESKY_PASSWORD }}
            -   name: Discord
                uses: Ilshidur/action-discord@master
                env:
                    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
                    DISCORD_EMBEDS: |
                        [
                            {
                                "title": "St Louis Game Developer Roundup Issue № ${{ needs.screenshot.outputs.issue_no }}",
                                "url": "${{ needs.screenshot.outputs.base_url }}/issue-${{ needs.screenshot.outputs.issue_no }}/",
                                "image": {
                                    "url": "https://raw.githubusercontent.com/AxolStudio/STLGameDevRoundUp/main/screenshots/issue-${{ needs.screenshot.outputs.issue_no }}.png"
                                }
                            }
                        ]
                with:
                    args: ":sparkles: St Louis Game Developer Roundup Issue № ${{ needs.screenshot.outputs.issue_no }} is out!"
                    
    finish:
        runs-on: ubuntu-latest
        needs: screenshot
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            OWNER: ${{ github.repository_owner }}
            REPO: ${{ github.event.repository.name }}
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Close Issue
                run: gh issue close ${{ needs.screenshot.outputs.issue_id }} -c "[Issue № ${{ needs.screenshot.outputs.issue_no }}](${{ needs.screenshot.outputs.base_url }}/issue-${{ needs.screenshot.outputs.issue_no }}/) has been released!" -r completed
            -   name: Open New Issue
                run: |
                    new_no=${{ needs.screenshot.outputs.issue_no }}+1
                    gh issue create -t "Roundup Issue #".$new_no -b "
                        "To add to the next roundup, use the following format:
                            
                        ```md
                        {category} short description with [link](/link/to/item)
                        ```
                        
                        Which should generate the following:
                            
                        {category} short description with [link](/link/to/item)"
                    -l "next-roundup"
            


                