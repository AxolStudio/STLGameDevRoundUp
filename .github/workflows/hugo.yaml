name: Deploy Hugo Site to GitHub Pages

on:
    workflow_dispatch:

permissions:
    contents: write
    issues: write
    pages: write
    id-token: write
    pull-requests: write

concurrency:
    group: "pages"
    cancel-in-progress: false

defaults:
    run:
        shell: bash

jobs:
    build: 
        runs-on: ubuntu-latest
        env:
            HUGO_VERSION: 0.120.2
        steps:
            -   name: Install Hugo CLI
                run: |
                    wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
                    && sudo dpkg -i ${{ runner.temp }}/hugo.deb
            -   name: Install Dart Sass
                run: sudo snap install dart-sass
            -   name: Checkout
                uses: actions/checkout@v4
                with: 
                    submodules: recursive
                    fetch-depth: 0
            -   name: Setup Pages
                id: pages
                uses: actions/configure-pages@v3
            -   name: Install dependencies
                run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
            -   name: Grab Issue Comments
                run: |
                    RUIssue="$(gh api graphql -F owner=$OWNER -F name=$REPO -f query='
                        query($name: String!, $owner: String!) {
                            repository(name: $name, owner: $owner) {
                                issues(first: 1, states: OPEN, labels: "next-roundup") {
                                    nodes {
                                        title
                                        comments(first:100) {
                                            nodes {
                                                body
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ')"
                    str=$(echo $RUIssue | jq -r '.data.repository.issues.nodes[0].title')
                    issue_number=${str#*#}
                    save_to="content/issue-${issue_number}.json"
                    echo $RUIssue | jq -r '.data.repository.issues.nodes[].comments.nodes[].body' > $save_to
                env: 
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    OWNER: ${{ github.repository_owner }}
                    REPO: ${{ github.event.repository.name }}
            -   name: Add PR for new page
                run: gh pr create --title "Add new page for issue ${issue_number}" --body "This PR adds a new page for issue ${issue_number}." --base main --head "issue-${issue_number}"
                env: 
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: Build
                env:
                    HUGO_ENVIRONMENT: production
                    HUGO_ENV: production
                run: |
                    hugo \
                    --gc \
                    --minify \
                    --baseURL "${{ steps.pages.outputs.base_url }}/"
            -   name: Upload Artifact
                uses: actions/upload-pages-artifact@v2
                with: 
                    path: ./public
        
    deploy:
        environment: 
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Deploy
                id: deployment
                uses: actions/deploy-pages@v2
                

