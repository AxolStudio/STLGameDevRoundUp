name: Deploy Hugo Site to GitHub Pages

on:
    workflow_dispatch:

permissions:
    contents: write
    issues: write
    pages: write
    id-token: write
    pull-requests: write

concurrency:
    group: "pages"
    cancel-in-progress: false

defaults:
    run:
        shell: bash

jobs:
    build: 
        runs-on: ubuntu-latest
        env:
            HUGO_VERSION: 0.120.2
        steps:
            -   name: Install Hugo CLI
                run: |
                    wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
                    && sudo dpkg -i ${{ runner.temp }}/hugo.deb
            -   name: Install Dart Sass
                run: sudo snap install dart-sass
            -   name: Checkout
                uses: actions/checkout@v4
                with: 
                    submodules: recursive
                    fetch-depth: 0
            -   name: Setup Pages
                id: pages
                uses: actions/configure-pages@v3
            -   name: Install dependencies
                run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
            -   name: Grab Issue Comments
                run: |
                    RUIssue="$(gh api graphql -F owner=$OWNER -F name=$REPO -f query='
                        query($name: String!, $owner: String!) {
                            repository(name: $name, owner: $owner) {
                                issues(first: 1, states: OPEN, labels: "next-roundup") {
                                    nodes {
                                        title
                                        comments(first:100) {
                                            nodes {
                                                body
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ')"
                    echo ${RUIssue}
                    issue_title=$(echo $RUIssue | jq -r '.data.repository.issues.nodes[0].title')
                    echo ${issue_title}
                    ru_no=$issue_title | grep -Eo '[0-9]+$ || true'
                    echo ${ru_no}
                    save_to="content/issue-${ru_no}.json"
                    echo ${save_to}
                    $content=$RUIssue | jq -r '.data.repository.issues.nodes[].comments.nodes[].body'
                    echo $content
                    echo $content > $save_to
                    echo 'ISSUE_NO'=$ru_no >> $GITHUB_ENV
                env: 
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    OWNER: ${{ github.repository_owner }}
                    REPO: ${{ github.event.repository.name }}
            -   name: Create PR
                run: |
                    gh pr create --title "Issue ${ISSUE_NO} Roundup" --body "This PR is an automated roundup of the comments on Issue ${ISSUE_NO}."
                env: 
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    ISSUE_NO: ${{ env.ISSUE_NO }}
            -   name: Build
                env:
                    HUGO_ENVIRONMENT: production
                    HUGO_ENV: production
                run: |
                    hugo \
                    --gc \
                    --minify \
                    --baseURL "${{ steps.pages.outputs.base_url }}/"
            -   name: Upload Artifact
                uses: actions/upload-pages-artifact@v2
                with: 
                    path: ./public
        
    deploy:
        environment: 
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Deploy
                id: deployment
                uses: actions/deploy-pages@v2
                

