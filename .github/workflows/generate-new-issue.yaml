name: ▶ Generate a new RoundUp Issue!
run-name: Generate a new Issue by @${{ github.actor }}

on:
    workflow_dispatch:

permissions: write-all

concurrency:
    group: "generate-pages"
    cancel-in-progress: false

defaults:
    run:
        shell: bash
 
jobs:

    generate:
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'workflow_dispatch' }}
        outputs:
            issue_no: ${{ steps.issue.outputs.issue_no }}
            issue_id: ${{ steps.issue.outputs.issue_id }}
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with: 
                    submodules: recursive
                    fetch-depth: 0
            -   name: Grab Issue Comments
                id: issue
                run: |
                    RUIssue="$(gh api graphql -F owner=$OWNER -F name=$REPO -f query='
                        query($name: String!, $owner: String!) {
                            repository(name: $name, owner: $owner) {
                                issues(first: 1, states: OPEN, labels: "next-roundup") {
                                    nodes {
                                        title
                                        number
                                        comments(first:100) {
                                            nodes {
                                                body
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ')"
                    issue_id=$(echo $RUIssue | jq -r '.data.repository.issues.nodes[0].number')
                    echo 'issue_id'=$issue_id >> $GITHUB_OUTPUT
                    issue_title=$(echo $RUIssue | jq -r '.data.repository.issues.nodes[0].title')
                    ru_no="${issue_title##*#}"
                    save_to="data/issue${ru_no}.json"
                    mkdir -p data

                    echo '{
                        "nodes": 
                    ' > $save_to
                    RUIComments=$(echo $RUIssue | jq '[.data.repository.issues.nodes[].comments.nodes[] | select(.body | startswith("{"))]')
                    RUIComments=$(echo $RUIComments | sed 's/\\r\\n/\\r\\n\\r\\n/g')
                    echo $RUIComments >> $save_to
                    echo '
                    }' >> $save_to
                    echo 'ISSUE_NO'=$ru_no >> $GITHUB_ENV
                    echo 'issue_no'=$ru_no >> $GITHUB_OUTPUT
                    md_file="content/issue-${ru_no}.md"
                    cat << EOF >> $md_file
                    ---
                    title: "Issue #$ru_no"
                    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
                    draft: false
                    no: $ru_no
                    ---
                    EOF
                env: 
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    OWNER: ${{ github.repository_owner }}
                    REPO: ${{ github.event.repository.name }}
            -   name: Commit change
                run: |
                    git config --global user.name "GitHub Actions"
                    git config --global user.email "no-reply@github.com"
                    git tag generated-issue-${ISSUE_NO}
                    git add content/issue-${ISSUE_NO}.md data/issue${ISSUE_NO}.json
                    git commit -m "Update issue ${ISSUE_NO}"
                    git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
                    git push --follow-tags 
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    ISSUE_NO: ${{ env.ISSUE_NO }}

    build:
        uses: ./.github/workflows/hugo-build.yaml
        needs: generate

    screenshot:
        needs: [generate, build]
        uses: ./.github/workflows/generate-screenshot.yaml
        with:
            issue_no: ${{ needs.generate.outputs.issue_no }}
            issue_id: ${{ needs.generate.outputs.issue_id }}
            base_url: ${{ needs.build.outputs.base_url }}

    
    share:
        runs-on: ubuntu-latest
        needs: [screenshot, generate, build]
        if: ${{ github.event_name == 'workflow_dispatch' }}
        steps:
            -   name: Tweet
                id: tweet
                uses: dart-actions/tweet@v1.0.0
                with:
                    consumer-key: ${{ secrets.CONSUMER_API_KEY }}
                    consumer-secret: ${{ secrets.CONSUMER_API_SECRET_KEY }}
                    access-token: ${{ secrets.ACCESS_TOKEN }}
                    access-token-secret: ${{ secrets.ACCESS_TOKEN_SECRET }}
                    text: |
                        St Louis Game Developer RoundUp Issue № ${{ needs.generate.outputs.issue_no }} is out!

                        ${{ needs.build.outputs.base_url }}/issue-${{ needs.generate.outputs.issue_no }}/

                        #STL #gamedev #IndieGameDev #videogames
            -   name: Bsky's
                uses: myConsciousness/bluesky-post@v5
                with: 
                    text:
                        St Louis Game Developer RoundUp Issue № ${{  needs.generate.outputs.issue_no }} is out!

                        ${{ needs.build.outputs.base_url }}/issue-${{  needs.generate.outputs.issue_no }}/
                    link-preview-url: ${{ needs.build.outputs.base_url }}/issue-${{  needs.generate.outputs.issue_no }}/
                    identifier: "axolstudio.com"
                    password: ${{ secrets.BLUESKY_PASSWORD }}
            -   name: Axol Discord
                uses: Ilshidur/action-discord@master
                env:
                    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
                    DISCORD_EMBEDS: |
                        [
                            {
                                "title": "St Louis Game Developer RoundUp Issue № ${{ needs.generate.outputs.issue_no }}",
                                "url": "${{ needs.build.outputs.base_url }}/issue-${{ needs.generate.outputs.issue_no }}/",
                                "image": {
                                    "url": "https://raw.githubusercontent.com/AxolStudio/STLGameDevRoundUp/main/screenshots/issue-${{ needs.generate.outputs.issue_no }}.png"
                                }
                            }
                        ]
                with:
                    args: ":sparkles: St Louis Game Developer RoundUp Issue № ${{ needs.generate.outputs.issue_no }} is out!"
            -   name: STL Game Dev Discord
                uses: Ilshidur/action-discord@master
                env:
                    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_2 }}
                    DISCORD_EMBEDS: |
                        [
                            {
                                "title": "St Louis Game Developer RoundUp Issue № ${{ needs.generate.outputs.issue_no }}",
                                "url": "${{ needs.build.outputs.base_url }}/issue-${{ needs.generate.outputs.issue_no }}/",
                                "image": {
                                    "url": "https://raw.githubusercontent.com/AxolStudio/STLGameDevRoundUp/main/screenshots/issue-${{ needs.generate.outputs.issue_no }}.png"
                                }
                            }
                        ]
                with:
                    args: ":sparkles: St Louis Game Developer RoundUp Issue № ${{ needs.generate.outputs.issue_no }} is out!"
                    
    finish:
        runs-on: ubuntu-latest
        needs: [screenshot, generate, build]
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            OWNER: ${{ github.repository_owner }}
            REPO: ${{ github.event.repository.name }}
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Close Issue
                run: gh issue close ${{ needs.generate.outputs.issue_id }} -c "[Issue № ${{ needs.generate.outputs.issue_no }}](${{ needs.build.outputs.base_url }}/issue-${{ needs.generate.outputs.issue_no }}/) has been released!" -r completed
            -   name: Open New Issue
                run: |
                    new_no=$((${{ needs.generate.outputs.issue_no }}+1))
                    gh issue create -t "RoundUp Issue #$new_no" -b "To add to the next roundup, use the following format:
                    \`\`\`md
                    {category} short description with [link](/link/to/item)
                    \`\`\`

                    Which should generate the following:

                    {category} short description with [link](/link/to/item)

                    Use `{!header}` as the category for *only one comment* to set the header message for this RoundUp." -l "next-roundup" -m "issue-$new_no" 
