name: ♻️ Regenerate a Roundup Issue

on:
  workflow_dispatch:
    inputs:
      issue_no:
        type: number
        required: true

concurrency:
  group: "generate-pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:

  generate:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    outputs:
      issue_no: ${{ steps.issue.outputs.issue_no }}
      issue_id: ${{ steps.issue.outputs.issue_id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Grab Issue Comments
      id: issue
      run: "RUIssue=\"$(gh api graphql -f query='\n  query getRepoByTitle {\n    search(query: \"\"\"repo:$OWNER/$REPO in:title Issue in:title ${{ inputs.issue_no }}\"\"\", type:ISSUE, first: 1 ) {\n      nodes {\n        ... on Issue {\n          title\n          number\n        }\n      }\n    }\n  }\n')\"\nissue_id=$(echo $RUIssue | jq -r '.data.repository.issues.nodes[0].number')\necho 'issue_id'=$issue_id >> $GITHUB_OUTPUT\nissue_title=$(echo $RUIssue | jq -r '.data.repository.issues.nodes[0].title')\nru_no=\"${issue_title##*#}\"\nsave_to=\"data/issue${ru_no}.json\"\nmkdir -p data\n          #magic___^_^___line\nRUIssueComments=\"$(gh api graphql -F owner=$OWNER -F name=$REPO -f query='\n    query($name: String!, $owner: String!) {\n        repository(name: $name, owner: $owner) {\n            issue(number: $issue_id) { \n              comments(first:100) {\n                  nodes {\n                      body\n                  }\n              } \n            }\n        }\n    }\n')\"\necho $RUIssueComments | jq -r '.data.repository.issues.nodes[].comments | with_entries( select(.comments | startswith('''{''''))) > $save_to\necho 'ISSUE_NO'=$ru_no >> $GITHUB_ENV\necho 'issue_no'=$ru_no >> $GITHUB_OUTPUT\nmd_file=\"content/issue-${ru_no}.md\"\ncat << EOF >> $md_file\n---\ntitle: \"Issue #$ru_no\"\ndate: $(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\ndraft: false\nno: $ru_no\n---\nEOF\n"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
    - name: Commit change
      run: "git config --global user.name \"GitHub Actions\"\ngit config --global user.email \"no-reply@github.com\"\ngit tag generated-issue-${ISSUE_NO}\ngit add content/issue-${ISSUE_NO}.md data/issue${ISSUE_NO}.json\ngit commit -m \"Update issue ${ISSUE_NO}\"\ngit remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}\ngit push --follow-tags \n"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_NO: ${{ env.ISSUE_NO }}

  build:
    uses: ./.github/workflows/hugo-build.yaml
    needs: generate

  screenshot:
    needs: [generate, build]
    uses: ./.github/workflows/generate-screenshot.yaml
    with:
      issue_no: ${{ needs.generate.outputs.issue_no }}
      issue_id: ${{ needs.generate.outputs.issue_id }}
      base_url: ${{ needs.build.outputs.base_url }}
